{"version":3,"sources":["extensions/talentPortalCommandSet/TalentPortalCommandSetCommandSet.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,oDAA+C;AAC/C,8DAA+C;AAC/C,kFAK8C;AAe9C,IAAM,UAAU,GAAW,kCAAkC,CAAC;AAE9D;IAA8D,oDAAmE;IAAjI;;IAqCA,CAAC;IAlCQ,iDAAM,GAAb;QACE,qBAAG,CAAC,IAAI,CAAC,UAAU,EAAE,8CAA8C,CAAC,CAAC;QACrE,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAGM,4DAAiB,GAAxB,UAAyB,KAAmD;QAC1E,IAAM,iBAAiB,GAAY,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;QAC5E,qBAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5C,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACtB,oEAAoE;YACpE,iBAAiB,CAAC,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC;IAGM,oDAAS,GAAhB,UAAiB,KAAgD;QAC/D,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACrB,KAAK,oBAAoB;gBACvB,6BAA6B;gBAC7B,kCAAkC;gBAClC,IAAI,UAAU,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;gBACvE,IAAI,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC1D,IAAI,GAAG,GAAG,uCAAuC,GAAG,QAAQ,GAAG,cAAc,GAAG,UAAU,CAAC;gBAC3F,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;gBAC3B,KAAK,CAAC;YACR,KAAK,mBAAmB;gBACtB,IAAI,GAAG,GAAG,6BAA6B,CAAC;gBACxC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;gBAC3B,KAAK,CAAC;YACR;gBACE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAjCD;QADC,qBAAQ;kEAIR;IAGD;QADC,qBAAQ;6EAQR;IAGD;QADC,qBAAQ;qEAkBR;IACH,uCAAC;CArCD,AAqCC,CArC6D,kDAAsB,GAqCnF;kBArCoB,gCAAgC","file":"extensions/talentPortalCommandSet/TalentPortalCommandSetCommandSet.js","sourcesContent":["import {override} from '@microsoft/decorators';\r\nimport {Log} from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseListViewCommandSet,\r\n  Command,\r\n  IListViewCommandSetListViewUpdatedParameters,\r\n  IListViewCommandSetExecuteEventParameters\r\n} from '@microsoft/sp-listview-extensibility';\r\nimport {Dialog} from '@microsoft/sp-dialog';\r\nimport * as strings from 'TalentPortalCommandSetCommandSetStrings';\r\n\r\n/**\r\n * If your command set uses the ClientSideComponentProperties JSON input,\r\n * it will be deserialized into the BaseExtension.properties object.\r\n * You can define an interface to describe it.\r\n */\r\nexport interface ITalentPortalCommandSetCommandSetProperties {\r\n  // This is an example; replace with your own properties\r\n  sampleTextOne: string;\r\n  sampleTextTwo: string;\r\n}\r\n\r\nconst LOG_SOURCE: string = 'TalentPortalCommandSetCommandSet';\r\n\r\nexport default class TalentPortalCommandSetCommandSet extends BaseListViewCommandSet<ITalentPortalCommandSetCommandSetProperties> {\r\n\r\n  @override\r\n  public onInit(): Promise<void> {\r\n    Log.info(LOG_SOURCE, 'Initialized TalentPortalCommandSetCommandSet');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  @override\r\n  public onListViewUpdated(event: IListViewCommandSetListViewUpdatedParameters): void {\r\n    const compareOneCommand: Command = this.tryGetCommand('Edit_TALENT_RECORD');\r\n    Log.info(LOG_SOURCE, JSON.stringify(event));\r\n    if (compareOneCommand) {\r\n      // This command should be hidden unless exactly one row is selected.\r\n      compareOneCommand.visible = event.selectedRows.length === 1;\r\n    }\r\n  }\r\n\r\n  @override\r\n  public onExecute(event: IListViewCommandSetExecuteEventParameters): void {\r\n    switch (event.itemId) {\r\n      case 'Edit_TALENT_RECORD':\r\n        //get record id & employee Id\r\n        //redirect to Talent Record Editor\r\n        var employeeId = event.selectedRows[0].getValueByName(\"KTPEmployeeID\");\r\n        var recordId = event.selectedRows[0].getValueByName(\"ID\");\r\n        var url = \"/SitePages/Talent-Form.aspx?talentId=\" + recordId + \"&employeeId=\" + employeeId;\r\n        window.location.href = url;\r\n        break;\r\n      case 'NEW_TALENT_RECORD':\r\n        var url = \"/SitePages/Talent-Form.aspx\";\r\n        window.location.href = url;\r\n        break;\r\n      default:\r\n        throw new Error('Unknown command');\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}