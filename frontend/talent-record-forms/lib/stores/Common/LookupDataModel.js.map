{"version":3,"sources":["stores/Common/LookupDataModel.ts"],"names":[],"mappings":";;AAAA,mDAAkD;AAKrC,QAAA,eAAe,GAAG,uBAAK,CAAC,KAAK,CAAC;IACzC,KAAK,EAAE,uBAAK,CAAC,UAAU,CAAC,uBAAK,CAAC,MAAM,CAAC;IACrC,KAAK,EAAE,uBAAK,CAAC,MAAM;CACpB,CAAC,CAAC;AASU,QAAA,qBAAqB,GAAsC,uBAAK,CAAC,KAAK,CAAC;IAClF,KAAK,EAAE,uBAAK,CAAC,MAAM;IACnB,KAAK,EAAE,uBAAK,CAAC,MAAM;IACnB,QAAQ,EAAE,uBAAK,CAAC,QAAQ,CAAC,uBAAK,CAAC,KAAK,CAAC,uBAAK,CAAC,IAAI,CAAC,cAAM,OAAA,6BAAqB,EAArB,CAAqB,CAAC,CAAC,EAAE,EAAE,CAAC;CACnF,CAAC,CAAA","file":"stores/Common/LookupDataModel.js","sourcesContent":["import {types, IModelType} from \"mobx-state-tree\";\r\nimport {Node} from \"webpack\";\r\n\r\nexport type __IModelType = IModelType<any, any>;\r\n\r\nexport const LookupDataModel = types.model({\r\n  value: types.identifier(types.string),\r\n  label: types.string\r\n});\r\n\r\n\r\ninterface INode {\r\n  value: string;\r\n  label: string;\r\n  children: INode[]\r\n}\r\n\r\nexport const NestedLookupDataModel: IModelType<Partial<INode>, INode> = types.model({\r\n  value: types.string,\r\n  label: types.string,\r\n  children: types.optional(types.array(types.late(() => NestedLookupDataModel)), [])\r\n})\r\n\r\n\r\nexport type LookupDataModel = typeof LookupDataModel.Type;\r\nexport type NestedLookupDataModel = typeof NestedLookupDataModel.Type;\r\n"],"sourceRoot":"..\\..\\..\\src"}