{"version":3,"sources":["stores/TalentsStore.ts"],"names":[],"mappings":"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","file":"stores/TalentsStore.js","sourcesContent":["import {applySnapshot, flow, getParent, types} from \"mobx-state-tree\";\r\nimport {DataProviderFactory} from \"./Common/DataProviderFactory\";\r\nimport axios from 'axios';\r\nimport {REST_API_URL} from './Common/Constants';\r\n\r\nexport const PreviousYearRating = types.model({\r\n  Performance: types.optional(types.string, \"\"),\r\n  Potential: types.optional(types.string, \"\"),\r\n  Year: types.optional(types.number, 0),\r\n  By: types.optional(types.string, \"\"),\r\n  At: types.optional(types.string, \"\")\r\n});\r\n\r\n//Todo : need to add extra couple of fields CreatedBy and ModifiedBy\r\nexport const Talent = types.model({\r\n  Id: types.maybe(types.number),\r\n  EmployeeId: types.optional(types.string, \"\"),\r\n  Name: types.optional(types.string, \"\"),\r\n  Manager: types.optional(types.string, \"\"),\r\n  AreaHead: types.optional(types.string, \"\"),\r\n  Division: types.optional(types.string, \"\"),\r\n  Unit: types.optional(types.string, \"\"),\r\n  Stream: types.optional(types.string, \"\"),\r\n  Function: types.optional(types.string, \"\"),\r\n  Location: types.optional(types.string, \"\"),\r\n  Grade: types.optional(types.string, \"\"),\r\n  BusinessRisk: types.optional(types.string, \"\"),\r\n  FlightRisk: types.optional(types.string, \"\"),\r\n  Performance: types.optional(types.string, \"\"),\r\n  Potential: types.optional(types.string, \"\"),\r\n  Movement: types.optional(types.string, \"\"),\r\n  Requirements_01_category: types.optional(types.string, \"\"),\r\n  Requirements_01_subcategory: types.optional(types.string, \"\"),\r\n  Requirements_02_category: types.optional(types.string, \"\"),\r\n  Requirements_02_subcategory: types.optional(types.string, \"\"),\r\n  Notes: types.optional(types.string, \"\"),\r\n  IsCurrentSubmission: types.optional(types.boolean, false),\r\n  Position: types.optional(types.string, \"\"),\r\n  SubmissionYear: types.optional(types.number, 0),\r\n  PreviousYear: types.maybe(PreviousYearRating)\r\n})\r\n  .named(\"TalentRecord\")\r\n  .actions(self => {\r\n\r\n\r\n    const SetValueIfDifferent = (oldValue: string, newValue: string) => {\r\n      if (oldValue != newValue)\r\n        oldValue = newValue;\r\n    }\r\n\r\n    //Todo : think about the Person data . Do we need to include userId, Email and displayName\r\n    const changeBusinessUnit = (businessUnit: string[]) => {\r\n      const [division, stream, unit, location] = businessUnit;\r\n\r\n\r\n      self.Division = division;\r\n      self.Stream = stream;\r\n      self.Unit = unit;\r\n      self.Location = location;\r\n    }\r\n\r\n    const changeDevelopmentRequirement01 = (requirements: string[]) => {\r\n      const [category, subcategory] = requirements;\r\n      self.Requirements_01_category = category;\r\n      self.Requirements_01_subcategory = subcategory\r\n    }\r\n\r\n\r\n    const changeDevelopmentRequirement02 = (requirements: string[]) => {\r\n      const [category, subcategory] = requirements;\r\n      self.Requirements_02_category = category;\r\n      self.Requirements_02_subcategory = subcategory\r\n    }\r\n\r\n    const changeFunction = (newFunction: string) => {\r\n      self.Function = newFunction;\r\n      //SetValueIfDifferent(self.BusinessFunction, newFunction)\r\n    }\r\n\r\n    const changeEmployeeName = (newEmployeeKey: string) => {\r\n      self.Name = newEmployeeKey;\r\n    }\r\n\r\n    const changeGrade = (newGrade: string) => {\r\n      self.Grade = newGrade;\r\n    }\r\n\r\n    const changeBusinessRisk = (newBusinessRisk: string) => {\r\n      self.BusinessRisk = newBusinessRisk;\r\n    }\r\n\r\n    const changeFlightRisk = (newFlightRisk: string) => {\r\n      self.FlightRisk = newFlightRisk;\r\n    }\r\n\r\n\r\n    const changeEmployeeId = (newEmployeeId: string) => {\r\n      self.EmployeeId = newEmployeeId;\r\n    }\r\n\r\n    const changePosition = (newPosition: string) => {\r\n      self.Position = newPosition;\r\n    }\r\n\r\n    const changeMovement = (newMovement: string) => {\r\n      self.Movement = newMovement;\r\n    }\r\n\r\n    const changePotentialRating = (newRating: string) => {\r\n      self.Potential = newRating;\r\n    }\r\n\r\n    const changePerformanceRating = (newRating: string) => {\r\n      self.Performance = newRating;\r\n    }\r\n\r\n    const changeAreaHead = (newHead: string) => {\r\n      self.AreaHead = newHead;\r\n    }\r\n\r\n    const changeManager = (newManager: string) => {\r\n      self.Manager = newManager;\r\n    }\r\n\r\n    const changeNotes = (notes: string) => {\r\n      self.Notes = notes;\r\n    }\r\n\r\n    return {\r\n      changeBusinessUnit,\r\n      changeFunction,\r\n      changeGrade,\r\n      changeBusinessRisk,\r\n      changeFlightRisk,\r\n      changeEmployeeId,\r\n      changePosition,\r\n      changeMovement,\r\n      changePotentialRating,\r\n      changePerformanceRating,\r\n      changeDevelopmentRequirement01,\r\n      changeDevelopmentRequirement02,\r\n      changeEmployeeName,\r\n      changeAreaHead,\r\n      changeManager,\r\n      changeNotes\r\n\r\n    }\r\n  })\r\n  .views(self => ({\r\n\r\n    get BusinessUnits() {\r\n      console.log(\"BusinessUnits: called\");\r\n      const {Division, Unit, Stream, Location} = self;\r\n      if (!Division)\r\n        return undefined;\r\n      const result = [Division, Unit, Stream, Location];\r\n      console.log(result)\r\n      return result;\r\n    },\r\n    get DevelopmentRequirement01() {\r\n      const {Requirements_01_category, Requirements_01_subcategory} = self;\r\n      return [Requirements_01_category, Requirements_01_subcategory];\r\n    },\r\n    get DevelopmentRequirement02() {\r\n      const {Requirements_02_category, Requirements_02_subcategory} = self;\r\n      return [Requirements_02_category, Requirements_02_subcategory];\r\n    }\r\n    ,\r\n    get HasPreviousYearRating() {\r\n      return (self.PreviousYear) ? true : false;\r\n    }\r\n\r\n  }));\r\n\r\n\r\nconst TalentsStore = types.model({\r\n  items: types.optional(types.array(Talent), []),\r\n  isLoading: types.optional(types.boolean, false)\r\n})\r\n  .views(self => {\r\n    return {\r\n      get app() {\r\n        let app = getParent(self, 1);\r\n        return app;\r\n      }\r\n    }\r\n  }).actions(\r\n  self => {\r\n\r\n    const _dataProvider = DataProviderFactory.GetTalentsDataProvider();\r\n    const LoadAllTalents = flow(function* LoadAllTalents() {\r\n\r\n      try {\r\n        const response = yield _dataProvider.GetAll();\r\n        if (response) {\r\n          console.log(\"Talents : \" + JSON.stringify(response, null, 4));\r\n          applySnapshot(self.items, response);\r\n        }\r\n      }\r\n      catch (error) {\r\n        console.log(\"Error retrieving Talents\" + error);\r\n        throw new Error(error.message);\r\n      }\r\n      finally {\r\n        self.isLoading = false;\r\n      }\r\n\r\n    })\r\n\r\n    const SaveTalentRecord = () => {\r\n\r\n      axios.post(REST_API_URL, JSON.stringify(getParent(self, 1).Talent), {headers: {'content-type': 'application/json'}}).then(_ => console.log(\"New Record Operation is done\"))\r\n        .catch(error => console.log(JSON.stringify(error, null, 4)))\r\n    }\r\n\r\n    const UpdateTalentRecord = () => {\r\n\r\n      axios.put(REST_API_URL, JSON.stringify(getParent(self, 1).Talent), {headers: {'content-type': 'application/json'}}).then(_ => console.log(\"New Record Operation is done\"))\r\n        .catch(error => console.log(JSON.stringify(error, null, 4)))\r\n    }\r\n\r\n\r\n    const GetTalentById = flow(function* GetTalentById(id: number, employeeId: string) {\r\n\r\n      let talent;\r\n      try {\r\n\r\n        self.isLoading = true;\r\n\r\n        const response = yield _dataProvider.GetTalentById(id, employeeId);\r\n        //getParent(self, 1).SetIsLoadingTalentData(true);\r\n        if (response) {\r\n\r\n          //Todo : ugly piece of code that needs to be refactored.\r\n          console.log(\"Talents : \" + JSON.stringify(response, null, 4));\r\n          talent = Talent.create(response.data);\r\n          getParent(self, 1).SetTalent(talent);\r\n          //applySnapshot(getParent(self, 1).Talent, talent);\r\n          //Todo: move this code for the AppStore\\ViewStore\r\n          /* if (getParent(self, 1).Talent)\r\n            applySnapshot(getParent(self, 1).Talent, talent);\r\n          else\r\n            getParent(self, 1).SetTalent(talent);*/\r\n          console.log(\"Talent Record : \" + JSON.stringify(talent, null, 4));\r\n        }\r\n      }\r\n      catch (error) {\r\n        console.log(\"Error retrieving Talents\" + error);\r\n        throw new Error(error.message);\r\n      }\r\n      finally {\r\n        self.isLoading = false;\r\n        //getParent(self, 1).SetIsLoadingTalentData(false);\r\n        return talent\r\n      }\r\n\r\n    })\r\n    return {LoadAllTalents, GetTalentById, SaveTalentRecord, UpdateTalentRecord}\r\n  }\r\n).actions(self => {\r\n  const afterCreate = () => {\r\n    console.log(\"Loading relevant Talent Records\")\r\n    self.LoadAllTalents().then(_ => console.log(\"Number of Loaded Talent Records :\" + self.items.length));\r\n  }\r\n\r\n  return {\r\n    afterCreate\r\n  }\r\n})\r\n\r\n\r\nexport default TalentsStore;\r\n"],"sourceRoot":"..\\..\\src"}