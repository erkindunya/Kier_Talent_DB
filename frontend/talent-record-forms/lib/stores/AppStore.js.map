{"version":3,"sources":["stores/AppStore.ts"],"names":[],"mappings":";;AAAA,mDAAiD;AAMjD,qDAAkD;AAClD,+CAAoD;AACpD,yCAAoC;AAEvB,QAAA,QAAQ,GAAG,uBAAK,CAAC,KAAK,CACjC;IACE,eAAe,EAAE,uBAAK,CAAC,QAAQ,CAAC,iCAAe,EAAE,EAAE,CAAC;IACpD,eAAe,EAAE,uBAAK,CAAC,QAAQ,CAAC,sBAAY,EAAE,EAAE,CAAC;IACjD,sBAAsB,EAAE,uBAAK,CAAC,QAAQ,CAAC,uBAAK,CAAC,OAAO,EAAE,KAAK,CAAC;IAC5D,mBAAmB,EAAE,uBAAK,CAAC,QAAQ,CAAC,uBAAK,CAAC,OAAO,EAAE,KAAK,CAAC;IACzD,SAAS,EAAE,uBAAK,CAAC,QAAQ,CAAC,mBAAS,EAAE,EAAE,CAAC;IACxC,MAAM,EAAE,uBAAK,CAAC,QAAQ,CAAC,qBAAM,EAAE,EAAE,CAAC;CAEnC,CACF,CAAC,KAAK,CAAC,sBAAsB,CAAC;KAC5B,OAAO,CAAC,UAAA,IAAI;IAGX,IAAM,yBAAyB,GAAG,UAAC,OAAgB;QACjD,IAAI,CAAC,sBAAsB,GAAG,OAAO,CAAA;IACvC,CAAC,CAAA;IAED,IAAM,sBAAsB,GAAG,UAAC,OAAgB;QAC9C,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAA;IACpC,CAAC,CAAA;IAED,IAAM,SAAS,GAAG,UAAC,IAAI;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC,CAAA;IAGD,IAAM,WAAW,GAAG;QAClB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC5B,CAAC,CAAA;IACD,MAAM,CAAC;QACL,yBAAyB,2BAAA;QACzB,sBAAsB,wBAAA;QACtB,SAAS,WAAA;QAET,WAAW,aAAA;KACZ,CAAA;AACH,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI;IACb,IAAM,gBAAgB,GAAG,UAAC,EAAU,EAAE,UAAkB;QACtD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC;YACvD,OAAA,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;QAAlC,CAAkC,CAAC,CAAA;IACvC,CAAC,CAAA;IAED,MAAM,CAAC;QACL,gBAAgB,kBAAA;KACjB,CAAA;AACH,CAAC,CAAC,CAAC","file":"stores/AppStore.js","sourcesContent":["import {types, IModelType} from 'mobx-state-tree'\r\nimport {BusinessFunctionsStore} from \"./LookupDataStores/BusinessFunctionsStore\";\r\nimport {get} from \"mobx\";\r\nimport {RiskLookupDataStore} from \"./LookupDataStores/RiskLookupDataStore\";\r\nimport {BusinessUnitsLookupDataStore} from \"./LookupDataStores/BusinessUnitsLookupDataStore\";\r\nimport {DevelopmentRequirementsLookupDataStore} from \"./LookupDataStores/DevelopmentRequirementsDataStore\";\r\nimport {LookupDataStore} from \"./LookupDataStore\";\r\nimport TalentsStore, {Talent} from \"./TalentsStore\";\r\nimport ViewStore from \"./ViewStore\";\r\n\r\nexport const AppStore = types.model(\r\n  {\r\n    LookupDataStore: types.optional(LookupDataStore, {}),\r\n    TalentDataStore: types.optional(TalentsStore, {}),\r\n    IsLoadingReferenceData: types.optional(types.boolean, false),\r\n    IsLoadingTalentData: types.optional(types.boolean, false),\r\n    ViewStore: types.optional(ViewStore, {}),\r\n    Talent: types.optional(Talent, {})\r\n\r\n  }\r\n).named(\"ApplicationDataStore\")\r\n  .actions(self => {\r\n\r\n\r\n    const SetIsLoadingReferenceData = (loading: boolean) => {\r\n      self.IsLoadingReferenceData = loading\r\n    }\r\n\r\n    const SetIsLoadingTalentData = (loading: boolean) => {\r\n      self.IsLoadingTalentData = loading\r\n    }\r\n\r\n    const SetTalent = (item) => {\r\n      self.Talent = item;\r\n    }\r\n\r\n\r\n    const afterCreate = () => {\r\n      self.ViewStore.LoadData();\r\n    }\r\n    return {\r\n      SetIsLoadingReferenceData,\r\n      SetIsLoadingTalentData,\r\n      SetTalent,\r\n\r\n      afterCreate\r\n    }\r\n  }).actions(self => {\r\n    const LoadTalentRecord = (id: number, employeeId: string) => {\r\n      self.SetIsLoadingTalentData(true);\r\n      self.TalentDataStore.GetTalentById(id, employeeId).then(_ =>\r\n        self.SetIsLoadingTalentData(false))\r\n    }\r\n\r\n    return {\r\n      LoadTalentRecord\r\n    }\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":"..\\..\\src"}