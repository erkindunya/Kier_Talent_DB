{"version":3,"sources":["stores/ViewStore.ts"],"names":[],"mappings":";;AAAA,mDAAiD;AACjD,+CAAsC;AAGtC,IAAM,SAAS,GAAG,uBAAK,CAAC,KAAK,CAAC;IAC5B,cAAc,EAAE,uBAAK,CAAC,QAAQ,CAAC,qBAAM,EAAE,EAAE,CAAC;IAC1C,SAAS,EAAE,uBAAK,CAAC,QAAQ,CAAC,uBAAK,CAAC,OAAO,EAAE,KAAK,CAAC;CAChD,CAAC;KACC,KAAK,CAAC,WAAW,CAAC;KAClB,KAAK,CAAC,UAAA,IAAI;IACT,MAAM,CAAC;QACL,IAAI,GAAG;YACL,MAAM,CAAC,2BAAS,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;KACF,CAAA;AACH,CAAC,CAAC;KACD,OAAO,CAAC,UAAA,IAAI;IAEX,IAAM,gBAAgB,GAAG,UAAC,EAAU;QAClC;YACI;QACJ,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;IAC/B,CAAC,CAAA;IAED,IAAM,eAAe,GAAG;IAExB,CAAC,CAAA;IAGD,IAAM,gBAAgB,GAAG;IAEzB,CAAC,CAAA;IACD,IAAM,QAAQ,GAAG;QACf,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxC,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;QAC5G,CAAC;IACH,CAAC,CAAA;IAED,MAAM,CAAC;QACL,gBAAgB,kBAAA;QAChB,eAAe,iBAAA;QACf,gBAAgB,kBAAA;QAChB,QAAQ,UAAA;KACT,CAAA;AACH,CAAC,CAAC,CAAA;AAGJ,kBAAe,SAAS,CAAC","file":"stores/ViewStore.js","sourcesContent":["import {getParent, types} from \"mobx-state-tree\";\r\nimport {Talent} from \"./TalentsStore\";\r\n\r\n\r\nconst ViewStore = types.model({\r\n  selectedTalent: types.optional(Talent, {}),\r\n  isEditing: types.optional(types.boolean, false)\r\n})\r\n  .named(\"ViewStore\")\r\n  .views(self => {\r\n    return {\r\n      get app() {\r\n        return getParent(self);\r\n      }\r\n    }\r\n  })\r\n  .actions(self => {\r\n\r\n    const EditTalentRecord = (id: number) => {\r\n      /*\r\n      * */\r\n      let result = self.app.TalentDataStore.GetTalentById(id);\r\n      self.selectedTalent = result;\r\n    }\r\n\r\n    const NewTalentRecord = () => {\r\n\r\n    }\r\n\r\n\r\n    const ViewTalentRecord = () => {\r\n\r\n    }\r\n    const LoadData = () => {\r\n      let url = new URL(window.location.href);\r\n      if (url.searchParams.has(\"talentId\") && url.searchParams.has(\"employeeId\")) {\r\n        self.isEditing = true;\r\n        console.log(\"Talent Id \" + url.searchParams.get(\"talentId\"));\r\n        self.app.LoadTalentRecord(parseInt(url.searchParams.get(\"talentId\")), url.searchParams.get(\"employeeId\"));\r\n      }\r\n    }\r\n\r\n    return {\r\n      EditTalentRecord,\r\n      NewTalentRecord,\r\n      ViewTalentRecord,\r\n      LoadData\r\n    }\r\n  })\r\n\r\n\r\nexport default ViewStore;\r\n"],"sourceRoot":"..\\..\\src"}