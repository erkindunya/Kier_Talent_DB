{"version":3,"sources":["webparts/talentRecordForms/components/TalentRecordEditor/controls/Selector.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,6BAA4B;AAC5B,yCAAoC;AAIpC;IAAsC,4BAAyB;IAD/D;QAAA,qEAoCC;QAhCC,kBAAY,GAAG,UAAC,KAAK;YACnB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;YAClB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAA;QAED,2BAAqB,GAAG;YACtB,IAAM,MAAM,GAAG,aAAM,CAAC,MAAM,CAAC;YAC7B,MAAM,CAAC,CAEL,oBAAC,aAAM,IAAC,IAAI,EAAC,OAAO,EAAC,QAAQ,EAAE,KAAI,CAAC,YAAY,EAAE,WAAW,EAAE,KAAI,CAAC,KAAK,CAAC,WAAW,IAEjF,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,oBAAC,MAAM,IAAC,KAAK,EAAE,CAAC,CAAC,KAAK,IAAG,CAAC,CAAC,KAAK,CAAU,EAA1C,CAA0C,CAAC,CAEhE,CACV,CAAA;QACH,CAAC,CAAA;;IAiBH,CAAC;IAdC,yBAAM,GAAN;QAEE,IAAM,YAAY,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAA;QAC/D,IAAM,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG;YACnC,YAAY,EAAE,YAAY;YAC1B,KAAK,EAAE,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAC,CAAC;SACjE,GAAG;YACF,KAAK,EAAE,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAC,CAAC;SACjE,CAAA;QAED,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAA;QAC9G,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAjCkB,QAAQ;QAD5B,qBAAQ;OACY,QAAQ,CAmC5B;IAAD,eAAC;CAnCD,AAmCC,CAnCqC,KAAK,CAAC,SAAS,GAmCpD;kBAnCoB,QAAQ","file":"webparts/talentRecordForms/components/TalentRecordEditor/controls/Selector.js","sourcesContent":["import * as React from 'react';\nimport {Select} from 'antd';\nimport {observer} from \"mobx-react\";\n\n\n@observer\nexport default class Selector extends React.Component<any, any> {\n\n\n  handleChange = (value) => {\n    console.log(value)\n    this.props.changed(value);\n  }\n\n  buildFunctionSelector = () => {\n    const Option = Select.Option;\n    return (\n\n      <Select size=\"small\" onChange={this.handleChange} placeholder={this.props.placeholder}>\n        {\n          this.props.items.map(f => <Option value={f.value}>{f.label}</Option>)\n        }\n      </Select>\n    )\n  }\n\n\n  render() {\n\n    const initialValue = (this.props.value) ? this.props.value : []\n    const options = (this.props.value) ? {\n      initialValue: initialValue,\n      rules: [{required: true, message: this.props.validationMessage}]\n    } : {\n      rules: [{required: true, message: this.props.validationMessage}]\n    }\n\n    const element = this.props.form.getFieldDecorator(this.props.controlId, options)(this.buildFunctionSelector())\n    return element;\n  }\n\n}\n"],"sourceRoot":"..\\..\\..\\..\\..\\..\\src"}