{"version":3,"sources":["webparts/talentRecordForms/components/TalentRecordEditor/controls/UserSelector.tsx"],"names":[],"mappings":"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","file":"webparts/talentRecordForms/components/TalentRecordEditor/controls/UserSelector.js","sourcesContent":["import {Icon, Select, Spin} from 'antd';\nimport {debounce} from 'lodash';\n\nconst Option = Select.Option;\nimport * as React from 'react';\nimport {SPHttpClient, SPHttpClientResponse, SPHttpClientConfiguration, ISPHttpClientOptions} from '@microsoft/sp-http';\nimport {inject, observer} from \"mobx-react\";\n\nimport pnp, {ClientPeoplePickerQueryParameters} from \"sp-pnp-js\";\n\n@inject(\"store\", \"context\")\n@observer\nexport default class UserRemoteSelect extends React.Component<any, any> {\n  lastFetchId: any;\n\n  constructor(props) {\n    super(props);\n    this.lastFetchId = 0;\n    this.fetchUser = debounce(this.fetchUser, 800);\n  }\n\n\n  state = {\n    data: [],\n    value: [],\n    fetching: false,\n  }\n  fetchUser = (value) => {\n\n    const opt: ClientPeoplePickerQueryParameters = {\n      AllowEmailAddresses: true,\n      MaximumEntitySuggestions: 10,\n      PrincipalSource: 15,\n      PrincipalType: 15,\n      QueryString: value\n    }\n\n    console.log('fetching user', value);\n    this.lastFetchId += 1;\n    const fetchId = this.lastFetchId;\n    this.setState({data: [], fetching: true});\n    pnp.sp.profiles.clientPeoplePickerSearchUser(opt).then(response => {\n      if (fetchId !== this.lastFetchId) { // for fetch callback order\n        return;\n      }\n      const data = response.map((user) => ({\n        text: user.DisplayText,\n        value: user.Key\n      }));\n      this.setState({data, fetching: false})\n    });\n  }\n  handleChange = (value) => {\n    this.setState({\n      value,\n      data: [],\n      fetching: false,\n    });\n    (value.length >= 1) ? this.props.changed(value[0].key) : \"\";\n  }\n\n\n  render() {\n    const {fetching, data, value} = this.state;\n    return (\n      <Select\n        size=\"small\"\n        mode=\"multiple\"\n        labelInValue\n        value={value}\n        placeholder=\"Select user\"\n        notFoundContent={fetching ? <Spin size=\"small\"/> : null}\n        filterOption={false}\n        onSearch={this.fetchUser}\n        onChange={this.handleChange}\n        style={{width: '100%'}}\n      >\n        {data.map(d => <Option key={d.value}>{d.text}</Option>)}\n      </Select>\n    );\n  }\n}\n"],"sourceRoot":"..\\..\\..\\..\\..\\..\\src"}